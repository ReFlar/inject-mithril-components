{"version":3,"sources":["webpack://@reflar/inject-js-components/webpack/bootstrap","webpack://@reflar/inject-js-components/external \"flarum.core.compat['extend']\"","webpack://@reflar/inject-js-components/external \"flarum.core.compat['components/DiscussionList']\"","webpack://@reflar/inject-js-components/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@reflar/inject-js-components/./src/forum/FlarumComponentElement.js","webpack://@reflar/inject-js-components/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@reflar/inject-js-components/./node_modules/JSON5/dist/index.js","webpack://@reflar/inject-js-components/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://@reflar/inject-js-components/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@reflar/inject-js-components/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://@reflar/inject-js-components/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://@reflar/inject-js-components/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://@reflar/inject-js-components/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@reflar/inject-js-components/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_assertThisInitialized","self","ReferenceError","__webpack_exports__","FlarumComponentElement","_this","_HTMLElement","this","componentName","getAttribute","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__","Component","Error","console","log","attributes","getAttributeNames","reduce","obj","str","startsWith","slice","JSON5","parse","e","eval","er","error","component","mount","HTMLElement","_inheritsLoose","subClass","superClass","constructor","__proto__","createCommonjsModule","fn","_global","global","window","Math","Function","__g","_core","version","__e","_isObject","it","_anObject","TypeError","_fails","exec","_descriptors","a","document","is","createElement","_ie8DomDefine","dP","_objectDp","f","O","P","Attributes","S","val","toString","valueOf","_toPrimitive","_hide","bitmap","configurable","writable","_propertyDesc","_has","id","px","random","_redefine","SRC","concat","undefined","$toString","TPL","split","inspectSource","safe","isFunction","join","String","_ctx","that","length","_aFunction","b","apply","arguments","$export","type","source","own","out","exp","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","target","expProto","U","W","R","TO_STRING","_export","ceil","floor","_toInteger","isNaN","$at","pos","_defined","charCodeAt","charAt","codePointAt","max","min","fromCharCode","$fromCodePoint","fromCodePoint","x","code","arguments$1","res","aLen","index","RangeError","push","parseState","stack","line","column","token","root","lexState","buffer","doubleQuote","sign","unicode","Space_Separator","ID_Start","ID_Continue","util","isSpaceSeparator","test","isIdStartChar","isIdContinueChar","isDigit","isHexDigit","lex","peek","lexStates","read","default","newToken","comment","invalidChar","multiLineComment","multiLineCommentAsterisk","singleLineComment","literal","Infinity","NaN","identifierNameStartEscape","u","unicodeEscape","invalidIdentifier","identifierName","identifierNameEscape","zero","decimalInteger","Number","decimalPointLeading","decimalPoint","decimalFraction","decimalExponent","decimalExponentSign","decimalExponentInteger","hexadecimal","hexadecimalInteger","string","parseInt","hexEscape","escape","warn","formatChar","separatorChar","start","beforePropertyName","afterPropertyName","beforePropertyValue","afterPropertyValue","beforeArrayValue","afterArrayValue","end","list","count","parseStates","invalidEOF","pop","parent","Array","isArray","current","syntaxError","replacements","'","\"","\\","\b","\f","\n","\r","\t","\u000b","\u0000"," "," ","hexString","substring","message","err","SyntaxError","lineNumber","columnNumber","text","reviver","internalize","holder","replacement","","stringify","replacer","space","propertyList","replacerFunc","quote","indent","gap","v","item","indexOf","substr","serializeProperty","toJSON5","toJSON","Boolean","quoteString","stepback","final","partial","propertyString","properties","separator","properties$1","serializeArray","keys","member","serializeKey","serializeObject","quotes","product","quoteChar","replace","RegExp","firstChar","factory","_getPrototypeOf","setPrototypeOf","getPrototypeOf","_setPrototypeOf","construct_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","isNativeReflectConstruct","instance","wrapNativeSuper_wrapNativeSuper","_cache","Map","has","set","Wrapper","_extends","assign","customElements","define","app","initializers","add","override","DiscussionList","org","preloadedDiscussions","preloadedApiDocument","data","apiDocument","extend","params","props","results","limit","page","parsed"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/DiscussionList'];","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import JSON5 from 'JSON5';\n\nexport default class FlarumComponentElement extends HTMLElement {\n    constructor() {\n        super();\n\n        const componentName = this.getAttribute('data-component');\n\n        if (componentName == null) return;\n\n        const Component = flarum.core.compat[componentName];\n\n        if (Component == null) throw new Error(`${componentName} does not exist or isn't public`);\n\n        console.log(Component);\n\n        const attributes = this.getAttributeNames().reduce((obj, str) => {\n            if (str === 'data-component') return obj;\n\n            let value = this.getAttribute(str);\n\n            if (str.startsWith(':')) {\n                str = str.slice(1);\n\n                try {\n                    value = JSON5.parse(value);\n                } catch (e) {\n                    try {\n                        value = eval(value);\n                    } catch (er) {\n                        console.error(`Error parsing '${str}' attribute value of '${value}`, e, er);\n                    }\n                }\n            }\n\n            obj[str] = value;\n            return obj;\n        }, {});\n\n        const component = Component.component(attributes);\n\n        m.mount(this, component);\n    }\n}\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.JSON5 = factory());\n}(this, (function () { 'use strict';\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\tvar _global = createCommonjsModule(function (module) {\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self\n\t  // eslint-disable-next-line no-new-func\n\t  : Function('return this')();\n\tif (typeof __g == 'number') { __g = global; } // eslint-disable-line no-undef\n\t});\n\n\tvar _core = createCommonjsModule(function (module) {\n\tvar core = module.exports = { version: '2.5.7' };\n\tif (typeof __e == 'number') { __e = core; } // eslint-disable-line no-undef\n\t});\n\tvar _core_1 = _core.version;\n\n\tvar _isObject = function (it) {\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n\tvar _anObject = function (it) {\n\t  if (!_isObject(it)) { throw TypeError(it + ' is not an object!'); }\n\t  return it;\n\t};\n\n\tvar _fails = function (exec) {\n\t  try {\n\t    return !!exec();\n\t  } catch (e) {\n\t    return true;\n\t  }\n\t};\n\n\t// Thank's IE8 for his funny defineProperty\n\tvar _descriptors = !_fails(function () {\n\t  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n\t});\n\n\tvar document = _global.document;\n\t// typeof document.createElement is 'object' in old IE\n\tvar is = _isObject(document) && _isObject(document.createElement);\n\tvar _domCreate = function (it) {\n\t  return is ? document.createElement(it) : {};\n\t};\n\n\tvar _ie8DomDefine = !_descriptors && !_fails(function () {\n\t  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;\n\t});\n\n\t// 7.1.1 ToPrimitive(input [, PreferredType])\n\n\t// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n\t// and the second argument - flag - preferred type is a string\n\tvar _toPrimitive = function (it, S) {\n\t  if (!_isObject(it)) { return it; }\n\t  var fn, val;\n\t  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) { return val; }\n\t  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) { return val; }\n\t  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) { return val; }\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\n\tvar dP = Object.defineProperty;\n\n\tvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n\t  _anObject(O);\n\t  P = _toPrimitive(P, true);\n\t  _anObject(Attributes);\n\t  if (_ie8DomDefine) { try {\n\t    return dP(O, P, Attributes);\n\t  } catch (e) { /* empty */ } }\n\t  if ('get' in Attributes || 'set' in Attributes) { throw TypeError('Accessors not supported!'); }\n\t  if ('value' in Attributes) { O[P] = Attributes.value; }\n\t  return O;\n\t};\n\n\tvar _objectDp = {\n\t\tf: f\n\t};\n\n\tvar _propertyDesc = function (bitmap, value) {\n\t  return {\n\t    enumerable: !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable: !(bitmap & 4),\n\t    value: value\n\t  };\n\t};\n\n\tvar _hide = _descriptors ? function (object, key, value) {\n\t  return _objectDp.f(object, key, _propertyDesc(1, value));\n\t} : function (object, key, value) {\n\t  object[key] = value;\n\t  return object;\n\t};\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tvar _has = function (it, key) {\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n\tvar id = 0;\n\tvar px = Math.random();\n\tvar _uid = function (key) {\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\n\tvar _redefine = createCommonjsModule(function (module) {\n\tvar SRC = _uid('src');\n\tvar TO_STRING = 'toString';\n\tvar $toString = Function[TO_STRING];\n\tvar TPL = ('' + $toString).split(TO_STRING);\n\n\t_core.inspectSource = function (it) {\n\t  return $toString.call(it);\n\t};\n\n\t(module.exports = function (O, key, val, safe) {\n\t  var isFunction = typeof val == 'function';\n\t  if (isFunction) { _has(val, 'name') || _hide(val, 'name', key); }\n\t  if (O[key] === val) { return; }\n\t  if (isFunction) { _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key))); }\n\t  if (O === _global) {\n\t    O[key] = val;\n\t  } else if (!safe) {\n\t    delete O[key];\n\t    _hide(O, key, val);\n\t  } else if (O[key]) {\n\t    O[key] = val;\n\t  } else {\n\t    _hide(O, key, val);\n\t  }\n\t// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n\t})(Function.prototype, TO_STRING, function toString() {\n\t  return typeof this == 'function' && this[SRC] || $toString.call(this);\n\t});\n\t});\n\n\tvar _aFunction = function (it) {\n\t  if (typeof it != 'function') { throw TypeError(it + ' is not a function!'); }\n\t  return it;\n\t};\n\n\t// optional / simple context binding\n\n\tvar _ctx = function (fn, that, length) {\n\t  _aFunction(fn);\n\t  if (that === undefined) { return fn; }\n\t  switch (length) {\n\t    case 1: return function (a) {\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function (a, b) {\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function (a, b, c) {\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function (/* ...args */) {\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n\tvar PROTOTYPE = 'prototype';\n\n\tvar $export = function (type, name, source) {\n\t  var IS_FORCED = type & $export.F;\n\t  var IS_GLOBAL = type & $export.G;\n\t  var IS_STATIC = type & $export.S;\n\t  var IS_PROTO = type & $export.P;\n\t  var IS_BIND = type & $export.B;\n\t  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n\t  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n\t  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n\t  var key, own, out, exp;\n\t  if (IS_GLOBAL) { source = name; }\n\t  for (key in source) {\n\t    // contains in native\n\t    own = !IS_FORCED && target && target[key] !== undefined;\n\t    // export native or passed\n\t    out = (own ? target : source)[key];\n\t    // bind timers to global for call from export context\n\t    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n\t    // extend global\n\t    if (target) { _redefine(target, key, out, type & $export.U); }\n\t    // export\n\t    if (exports[key] != out) { _hide(exports, key, exp); }\n\t    if (IS_PROTO && expProto[key] != out) { expProto[key] = out; }\n\t  }\n\t};\n\t_global.core = _core;\n\t// type bitmap\n\t$export.F = 1;   // forced\n\t$export.G = 2;   // global\n\t$export.S = 4;   // static\n\t$export.P = 8;   // proto\n\t$export.B = 16;  // bind\n\t$export.W = 32;  // wrap\n\t$export.U = 64;  // safe\n\t$export.R = 128; // real proto method for `library`\n\tvar _export = $export;\n\n\t// 7.1.4 ToInteger\n\tvar ceil = Math.ceil;\n\tvar floor = Math.floor;\n\tvar _toInteger = function (it) {\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tvar _defined = function (it) {\n\t  if (it == undefined) { throw TypeError(\"Can't call method on  \" + it); }\n\t  return it;\n\t};\n\n\t// true  -> String#at\n\t// false -> String#codePointAt\n\tvar _stringAt = function (TO_STRING) {\n\t  return function (that, pos) {\n\t    var s = String(_defined(that));\n\t    var i = _toInteger(pos);\n\t    var l = s.length;\n\t    var a, b;\n\t    if (i < 0 || i >= l) { return TO_STRING ? '' : undefined; }\n\t    a = s.charCodeAt(i);\n\t    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n\t      ? TO_STRING ? s.charAt(i) : a\n\t      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n\t  };\n\t};\n\n\tvar $at = _stringAt(false);\n\t_export(_export.P, 'String', {\n\t  // 21.1.3.3 String.prototype.codePointAt(pos)\n\t  codePointAt: function codePointAt(pos) {\n\t    return $at(this, pos);\n\t  }\n\t});\n\n\tvar codePointAt = _core.String.codePointAt;\n\n\tvar max = Math.max;\n\tvar min = Math.min;\n\tvar _toAbsoluteIndex = function (index, length) {\n\t  index = _toInteger(index);\n\t  return index < 0 ? max(index + length, 0) : min(index, length);\n\t};\n\n\tvar fromCharCode = String.fromCharCode;\n\tvar $fromCodePoint = String.fromCodePoint;\n\n\t// length should be 1, old FF problem\n\t_export(_export.S + _export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n\t  // 21.1.2.2 String.fromCodePoint(...codePoints)\n\t  fromCodePoint: function fromCodePoint(x) {\n\t    var arguments$1 = arguments;\n\t // eslint-disable-line no-unused-vars\n\t    var res = [];\n\t    var aLen = arguments.length;\n\t    var i = 0;\n\t    var code;\n\t    while (aLen > i) {\n\t      code = +arguments$1[i++];\n\t      if (_toAbsoluteIndex(code, 0x10ffff) !== code) { throw RangeError(code + ' is not a valid code point'); }\n\t      res.push(code < 0x10000\n\t        ? fromCharCode(code)\n\t        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n\t      );\n\t    } return res.join('');\n\t  }\n\t});\n\n\tvar fromCodePoint = _core.String.fromCodePoint;\n\n\t// This is a generated file. Do not edit.\n\tvar Space_Separator = /[\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\n\tvar ID_Start = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/;\n\tvar ID_Continue = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF9\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE83\\uDE86-\\uDE99\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/;\n\n\tvar unicode = {\n\t\tSpace_Separator: Space_Separator,\n\t\tID_Start: ID_Start,\n\t\tID_Continue: ID_Continue\n\t};\n\n\tvar util = {\n\t    isSpaceSeparator: function isSpaceSeparator (c) {\n\t        return unicode.Space_Separator.test(c)\n\t    },\n\n\t    isIdStartChar: function isIdStartChar (c) {\n\t        return (\n\t            (c >= 'a' && c <= 'z') ||\n\t        (c >= 'A' && c <= 'Z') ||\n\t        (c === '$') || (c === '_') ||\n\t        unicode.ID_Start.test(c)\n\t        )\n\t    },\n\n\t    isIdContinueChar: function isIdContinueChar (c) {\n\t        return (\n\t            (c >= 'a' && c <= 'z') ||\n\t        (c >= 'A' && c <= 'Z') ||\n\t        (c >= '0' && c <= '9') ||\n\t        (c === '$') || (c === '_') ||\n\t        (c === '\\u200C') || (c === '\\u200D') ||\n\t        unicode.ID_Continue.test(c)\n\t        )\n\t    },\n\n\t    isDigit: function isDigit (c) {\n\t        return /[0-9]/.test(c)\n\t    },\n\n\t    isHexDigit: function isHexDigit (c) {\n\t        return /[0-9A-Fa-f]/.test(c)\n\t    },\n\t};\n\n\tvar source;\n\tvar parseState;\n\tvar stack;\n\tvar pos;\n\tvar line;\n\tvar column;\n\tvar token;\n\tvar key;\n\tvar root;\n\n\tvar parse = function parse (text, reviver) {\n\t    source = String(text);\n\t    parseState = 'start';\n\t    stack = [];\n\t    pos = 0;\n\t    line = 1;\n\t    column = 0;\n\t    token = undefined;\n\t    key = undefined;\n\t    root = undefined;\n\n\t    do {\n\t        token = lex();\n\n\t        // This code is unreachable.\n\t        // if (!parseStates[parseState]) {\n\t        //     throw invalidParseState()\n\t        // }\n\n\t        parseStates[parseState]();\n\t    } while (token.type !== 'eof')\n\n\t    if (typeof reviver === 'function') {\n\t        return internalize({'': root}, '', reviver)\n\t    }\n\n\t    return root\n\t};\n\n\tfunction internalize (holder, name, reviver) {\n\t    var value = holder[name];\n\t    if (value != null && typeof value === 'object') {\n\t        for (var key in value) {\n\t            var replacement = internalize(value, key, reviver);\n\t            if (replacement === undefined) {\n\t                delete value[key];\n\t            } else {\n\t                value[key] = replacement;\n\t            }\n\t        }\n\t    }\n\n\t    return reviver.call(holder, name, value)\n\t}\n\n\tvar lexState;\n\tvar buffer;\n\tvar doubleQuote;\n\tvar sign;\n\tvar c;\n\n\tfunction lex () {\n\t    lexState = 'default';\n\t    buffer = '';\n\t    doubleQuote = false;\n\t    sign = 1;\n\n\t    for (;;) {\n\t        c = peek();\n\n\t        // This code is unreachable.\n\t        // if (!lexStates[lexState]) {\n\t        //     throw invalidLexState(lexState)\n\t        // }\n\n\t        var token = lexStates[lexState]();\n\t        if (token) {\n\t            return token\n\t        }\n\t    }\n\t}\n\n\tfunction peek () {\n\t    if (source[pos]) {\n\t        return String.fromCodePoint(source.codePointAt(pos))\n\t    }\n\t}\n\n\tfunction read () {\n\t    var c = peek();\n\n\t    if (c === '\\n') {\n\t        line++;\n\t        column = 0;\n\t    } else if (c) {\n\t        column += c.length;\n\t    } else {\n\t        column++;\n\t    }\n\n\t    if (c) {\n\t        pos += c.length;\n\t    }\n\n\t    return c\n\t}\n\n\tvar lexStates = {\n\t    default: function default$1 () {\n\t        switch (c) {\n\t        case '\\t':\n\t        case '\\v':\n\t        case '\\f':\n\t        case ' ':\n\t        case '\\u00A0':\n\t        case '\\uFEFF':\n\t        case '\\n':\n\t        case '\\r':\n\t        case '\\u2028':\n\t        case '\\u2029':\n\t            read();\n\t            return\n\n\t        case '/':\n\t            read();\n\t            lexState = 'comment';\n\t            return\n\n\t        case undefined:\n\t            read();\n\t            return newToken('eof')\n\t        }\n\n\t        if (util.isSpaceSeparator(c)) {\n\t            read();\n\t            return\n\t        }\n\n\t        // This code is unreachable.\n\t        // if (!lexStates[parseState]) {\n\t        //     throw invalidLexState(parseState)\n\t        // }\n\n\t        return lexStates[parseState]()\n\t    },\n\n\t    comment: function comment () {\n\t        switch (c) {\n\t        case '*':\n\t            read();\n\t            lexState = 'multiLineComment';\n\t            return\n\n\t        case '/':\n\t            read();\n\t            lexState = 'singleLineComment';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    multiLineComment: function multiLineComment () {\n\t        switch (c) {\n\t        case '*':\n\t            read();\n\t            lexState = 'multiLineCommentAsterisk';\n\t            return\n\n\t        case undefined:\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t    },\n\n\t    multiLineCommentAsterisk: function multiLineCommentAsterisk () {\n\t        switch (c) {\n\t        case '*':\n\t            read();\n\t            return\n\n\t        case '/':\n\t            read();\n\t            lexState = 'default';\n\t            return\n\n\t        case undefined:\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t        lexState = 'multiLineComment';\n\t    },\n\n\t    singleLineComment: function singleLineComment () {\n\t        switch (c) {\n\t        case '\\n':\n\t        case '\\r':\n\t        case '\\u2028':\n\t        case '\\u2029':\n\t            read();\n\t            lexState = 'default';\n\t            return\n\n\t        case undefined:\n\t            read();\n\t            return newToken('eof')\n\t        }\n\n\t        read();\n\t    },\n\n\t    value: function value () {\n\t        switch (c) {\n\t        case '{':\n\t        case '[':\n\t            return newToken('punctuator', read())\n\n\t        case 'n':\n\t            read();\n\t            literal('ull');\n\t            return newToken('null', null)\n\n\t        case 't':\n\t            read();\n\t            literal('rue');\n\t            return newToken('boolean', true)\n\n\t        case 'f':\n\t            read();\n\t            literal('alse');\n\t            return newToken('boolean', false)\n\n\t        case '-':\n\t        case '+':\n\t            if (read() === '-') {\n\t                sign = -1;\n\t            }\n\n\t            lexState = 'sign';\n\t            return\n\n\t        case '.':\n\t            buffer = read();\n\t            lexState = 'decimalPointLeading';\n\t            return\n\n\t        case '0':\n\t            buffer = read();\n\t            lexState = 'zero';\n\t            return\n\n\t        case '1':\n\t        case '2':\n\t        case '3':\n\t        case '4':\n\t        case '5':\n\t        case '6':\n\t        case '7':\n\t        case '8':\n\t        case '9':\n\t            buffer = read();\n\t            lexState = 'decimalInteger';\n\t            return\n\n\t        case 'I':\n\t            read();\n\t            literal('nfinity');\n\t            return newToken('numeric', Infinity)\n\n\t        case 'N':\n\t            read();\n\t            literal('aN');\n\t            return newToken('numeric', NaN)\n\n\t        case '\"':\n\t        case \"'\":\n\t            doubleQuote = (read() === '\"');\n\t            buffer = '';\n\t            lexState = 'string';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    identifierNameStartEscape: function identifierNameStartEscape () {\n\t        if (c !== 'u') {\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t        var u = unicodeEscape();\n\t        switch (u) {\n\t        case '$':\n\t        case '_':\n\t            break\n\n\t        default:\n\t            if (!util.isIdStartChar(u)) {\n\t                throw invalidIdentifier()\n\t            }\n\n\t            break\n\t        }\n\n\t        buffer += u;\n\t        lexState = 'identifierName';\n\t    },\n\n\t    identifierName: function identifierName () {\n\t        switch (c) {\n\t        case '$':\n\t        case '_':\n\t        case '\\u200C':\n\t        case '\\u200D':\n\t            buffer += read();\n\t            return\n\n\t        case '\\\\':\n\t            read();\n\t            lexState = 'identifierNameEscape';\n\t            return\n\t        }\n\n\t        if (util.isIdContinueChar(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('identifier', buffer)\n\t    },\n\n\t    identifierNameEscape: function identifierNameEscape () {\n\t        if (c !== 'u') {\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t        var u = unicodeEscape();\n\t        switch (u) {\n\t        case '$':\n\t        case '_':\n\t        case '\\u200C':\n\t        case '\\u200D':\n\t            break\n\n\t        default:\n\t            if (!util.isIdContinueChar(u)) {\n\t                throw invalidIdentifier()\n\t            }\n\n\t            break\n\t        }\n\n\t        buffer += u;\n\t        lexState = 'identifierName';\n\t    },\n\n\t    sign: function sign$1 () {\n\t        switch (c) {\n\t        case '.':\n\t            buffer = read();\n\t            lexState = 'decimalPointLeading';\n\t            return\n\n\t        case '0':\n\t            buffer = read();\n\t            lexState = 'zero';\n\t            return\n\n\t        case '1':\n\t        case '2':\n\t        case '3':\n\t        case '4':\n\t        case '5':\n\t        case '6':\n\t        case '7':\n\t        case '8':\n\t        case '9':\n\t            buffer = read();\n\t            lexState = 'decimalInteger';\n\t            return\n\n\t        case 'I':\n\t            read();\n\t            literal('nfinity');\n\t            return newToken('numeric', sign * Infinity)\n\n\t        case 'N':\n\t            read();\n\t            literal('aN');\n\t            return newToken('numeric', NaN)\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    zero: function zero () {\n\t        switch (c) {\n\t        case '.':\n\t            buffer += read();\n\t            lexState = 'decimalPoint';\n\t            return\n\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\n\t        case 'x':\n\t        case 'X':\n\t            buffer += read();\n\t            lexState = 'hexadecimal';\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * 0)\n\t    },\n\n\t    decimalInteger: function decimalInteger () {\n\t        switch (c) {\n\t        case '.':\n\t            buffer += read();\n\t            lexState = 'decimalPoint';\n\t            return\n\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    decimalPointLeading: function decimalPointLeading () {\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalFraction';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    decimalPoint: function decimalPoint () {\n\t        switch (c) {\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalFraction';\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    decimalFraction: function decimalFraction () {\n\t        switch (c) {\n\t        case 'e':\n\t        case 'E':\n\t            buffer += read();\n\t            lexState = 'decimalExponent';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    decimalExponent: function decimalExponent () {\n\t        switch (c) {\n\t        case '+':\n\t        case '-':\n\t            buffer += read();\n\t            lexState = 'decimalExponentSign';\n\t            return\n\t        }\n\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalExponentInteger';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    decimalExponentSign: function decimalExponentSign () {\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'decimalExponentInteger';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    decimalExponentInteger: function decimalExponentInteger () {\n\t        if (util.isDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    hexadecimal: function hexadecimal () {\n\t        if (util.isHexDigit(c)) {\n\t            buffer += read();\n\t            lexState = 'hexadecimalInteger';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    hexadecimalInteger: function hexadecimalInteger () {\n\t        if (util.isHexDigit(c)) {\n\t            buffer += read();\n\t            return\n\t        }\n\n\t        return newToken('numeric', sign * Number(buffer))\n\t    },\n\n\t    string: function string () {\n\t        switch (c) {\n\t        case '\\\\':\n\t            read();\n\t            buffer += escape();\n\t            return\n\n\t        case '\"':\n\t            if (doubleQuote) {\n\t                read();\n\t                return newToken('string', buffer)\n\t            }\n\n\t            buffer += read();\n\t            return\n\n\t        case \"'\":\n\t            if (!doubleQuote) {\n\t                read();\n\t                return newToken('string', buffer)\n\t            }\n\n\t            buffer += read();\n\t            return\n\n\t        case '\\n':\n\t        case '\\r':\n\t            throw invalidChar(read())\n\n\t        case '\\u2028':\n\t        case '\\u2029':\n\t            separatorChar(c);\n\t            break\n\n\t        case undefined:\n\t            throw invalidChar(read())\n\t        }\n\n\t        buffer += read();\n\t    },\n\n\t    start: function start () {\n\t        switch (c) {\n\t        case '{':\n\t        case '[':\n\t            return newToken('punctuator', read())\n\n\t        // This code is unreachable since the default lexState handles eof.\n\t        // case undefined:\n\t        //     return newToken('eof')\n\t        }\n\n\t        lexState = 'value';\n\t    },\n\n\t    beforePropertyName: function beforePropertyName () {\n\t        switch (c) {\n\t        case '$':\n\t        case '_':\n\t            buffer = read();\n\t            lexState = 'identifierName';\n\t            return\n\n\t        case '\\\\':\n\t            read();\n\t            lexState = 'identifierNameStartEscape';\n\t            return\n\n\t        case '}':\n\t            return newToken('punctuator', read())\n\n\t        case '\"':\n\t        case \"'\":\n\t            doubleQuote = (read() === '\"');\n\t            lexState = 'string';\n\t            return\n\t        }\n\n\t        if (util.isIdStartChar(c)) {\n\t            buffer += read();\n\t            lexState = 'identifierName';\n\t            return\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    afterPropertyName: function afterPropertyName () {\n\t        if (c === ':') {\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    beforePropertyValue: function beforePropertyValue () {\n\t        lexState = 'value';\n\t    },\n\n\t    afterPropertyValue: function afterPropertyValue () {\n\t        switch (c) {\n\t        case ',':\n\t        case '}':\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    beforeArrayValue: function beforeArrayValue () {\n\t        if (c === ']') {\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        lexState = 'value';\n\t    },\n\n\t    afterArrayValue: function afterArrayValue () {\n\t        switch (c) {\n\t        case ',':\n\t        case ']':\n\t            return newToken('punctuator', read())\n\t        }\n\n\t        throw invalidChar(read())\n\t    },\n\n\t    end: function end () {\n\t        // This code is unreachable since it's handled by the default lexState.\n\t        // if (c === undefined) {\n\t        //     read()\n\t        //     return newToken('eof')\n\t        // }\n\n\t        throw invalidChar(read())\n\t    },\n\t};\n\n\tfunction newToken (type, value) {\n\t    return {\n\t        type: type,\n\t        value: value,\n\t        line: line,\n\t        column: column,\n\t    }\n\t}\n\n\tfunction literal (s) {\n\t    for (var i = 0, list = s; i < list.length; i += 1) {\n\t        var c = list[i];\n\n\t        var p = peek();\n\n\t        if (p !== c) {\n\t            throw invalidChar(read())\n\t        }\n\n\t        read();\n\t    }\n\t}\n\n\tfunction escape () {\n\t    var c = peek();\n\t    switch (c) {\n\t    case 'b':\n\t        read();\n\t        return '\\b'\n\n\t    case 'f':\n\t        read();\n\t        return '\\f'\n\n\t    case 'n':\n\t        read();\n\t        return '\\n'\n\n\t    case 'r':\n\t        read();\n\t        return '\\r'\n\n\t    case 't':\n\t        read();\n\t        return '\\t'\n\n\t    case 'v':\n\t        read();\n\t        return '\\v'\n\n\t    case '0':\n\t        read();\n\t        if (util.isDigit(peek())) {\n\t            throw invalidChar(read())\n\t        }\n\n\t        return '\\0'\n\n\t    case 'x':\n\t        read();\n\t        return hexEscape()\n\n\t    case 'u':\n\t        read();\n\t        return unicodeEscape()\n\n\t    case '\\n':\n\t    case '\\u2028':\n\t    case '\\u2029':\n\t        read();\n\t        return ''\n\n\t    case '\\r':\n\t        read();\n\t        if (peek() === '\\n') {\n\t            read();\n\t        }\n\n\t        return ''\n\n\t    case '1':\n\t    case '2':\n\t    case '3':\n\t    case '4':\n\t    case '5':\n\t    case '6':\n\t    case '7':\n\t    case '8':\n\t    case '9':\n\t        throw invalidChar(read())\n\n\t    case undefined:\n\t        throw invalidChar(read())\n\t    }\n\n\t    return read()\n\t}\n\n\tfunction hexEscape () {\n\t    var buffer = '';\n\t    var c = peek();\n\n\t    if (!util.isHexDigit(c)) {\n\t        throw invalidChar(read())\n\t    }\n\n\t    buffer += read();\n\n\t    c = peek();\n\t    if (!util.isHexDigit(c)) {\n\t        throw invalidChar(read())\n\t    }\n\n\t    buffer += read();\n\n\t    return String.fromCodePoint(parseInt(buffer, 16))\n\t}\n\n\tfunction unicodeEscape () {\n\t    var buffer = '';\n\t    var count = 4;\n\n\t    while (count-- > 0) {\n\t        var c = peek();\n\t        if (!util.isHexDigit(c)) {\n\t            throw invalidChar(read())\n\t        }\n\n\t        buffer += read();\n\t    }\n\n\t    return String.fromCodePoint(parseInt(buffer, 16))\n\t}\n\n\tvar parseStates = {\n\t    start: function start () {\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        push();\n\t    },\n\n\t    beforePropertyName: function beforePropertyName () {\n\t        switch (token.type) {\n\t        case 'identifier':\n\t        case 'string':\n\t            key = token.value;\n\t            parseState = 'afterPropertyName';\n\t            return\n\n\t        case 'punctuator':\n\t            // This code is unreachable since it's handled by the lexState.\n\t            // if (token.value !== '}') {\n\t            //     throw invalidToken()\n\t            // }\n\n\t            pop();\n\t            return\n\n\t        case 'eof':\n\t            throw invalidEOF()\n\t        }\n\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // throw invalidToken()\n\t    },\n\n\t    afterPropertyName: function afterPropertyName () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'punctuator' || token.value !== ':') {\n\t        //     throw invalidToken()\n\t        // }\n\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        parseState = 'beforePropertyValue';\n\t    },\n\n\t    beforePropertyValue: function beforePropertyValue () {\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        push();\n\t    },\n\n\t    beforeArrayValue: function beforeArrayValue () {\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        if (token.type === 'punctuator' && token.value === ']') {\n\t            pop();\n\t            return\n\t        }\n\n\t        push();\n\t    },\n\n\t    afterPropertyValue: function afterPropertyValue () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'punctuator') {\n\t        //     throw invalidToken()\n\t        // }\n\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        switch (token.value) {\n\t        case ',':\n\t            parseState = 'beforePropertyName';\n\t            return\n\n\t        case '}':\n\t            pop();\n\t        }\n\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // throw invalidToken()\n\t    },\n\n\t    afterArrayValue: function afterArrayValue () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'punctuator') {\n\t        //     throw invalidToken()\n\t        // }\n\n\t        if (token.type === 'eof') {\n\t            throw invalidEOF()\n\t        }\n\n\t        switch (token.value) {\n\t        case ',':\n\t            parseState = 'beforeArrayValue';\n\t            return\n\n\t        case ']':\n\t            pop();\n\t        }\n\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // throw invalidToken()\n\t    },\n\n\t    end: function end () {\n\t        // This code is unreachable since it's handled by the lexState.\n\t        // if (token.type !== 'eof') {\n\t        //     throw invalidToken()\n\t        // }\n\t    },\n\t};\n\n\tfunction push () {\n\t    var value;\n\n\t    switch (token.type) {\n\t    case 'punctuator':\n\t        switch (token.value) {\n\t        case '{':\n\t            value = {};\n\t            break\n\n\t        case '[':\n\t            value = [];\n\t            break\n\t        }\n\n\t        break\n\n\t    case 'null':\n\t    case 'boolean':\n\t    case 'numeric':\n\t    case 'string':\n\t        value = token.value;\n\t        break\n\n\t    // This code is unreachable.\n\t    // default:\n\t    //     throw invalidToken()\n\t    }\n\n\t    if (root === undefined) {\n\t        root = value;\n\t    } else {\n\t        var parent = stack[stack.length - 1];\n\t        if (Array.isArray(parent)) {\n\t            parent.push(value);\n\t        } else {\n\t            parent[key] = value;\n\t        }\n\t    }\n\n\t    if (value !== null && typeof value === 'object') {\n\t        stack.push(value);\n\n\t        if (Array.isArray(value)) {\n\t            parseState = 'beforeArrayValue';\n\t        } else {\n\t            parseState = 'beforePropertyName';\n\t        }\n\t    } else {\n\t        var current = stack[stack.length - 1];\n\t        if (current == null) {\n\t            parseState = 'end';\n\t        } else if (Array.isArray(current)) {\n\t            parseState = 'afterArrayValue';\n\t        } else {\n\t            parseState = 'afterPropertyValue';\n\t        }\n\t    }\n\t}\n\n\tfunction pop () {\n\t    stack.pop();\n\n\t    var current = stack[stack.length - 1];\n\t    if (current == null) {\n\t        parseState = 'end';\n\t    } else if (Array.isArray(current)) {\n\t        parseState = 'afterArrayValue';\n\t    } else {\n\t        parseState = 'afterPropertyValue';\n\t    }\n\t}\n\n\t// This code is unreachable.\n\t// function invalidParseState () {\n\t//     return new Error(`JSON5: invalid parse state '${parseState}'`)\n\t// }\n\n\t// This code is unreachable.\n\t// function invalidLexState (state) {\n\t//     return new Error(`JSON5: invalid lex state '${state}'`)\n\t// }\n\n\tfunction invalidChar (c) {\n\t    if (c === undefined) {\n\t        return syntaxError((\"JSON5: invalid end of input at \" + line + \":\" + column))\n\t    }\n\n\t    return syntaxError((\"JSON5: invalid character '\" + (formatChar(c)) + \"' at \" + line + \":\" + column))\n\t}\n\n\tfunction invalidEOF () {\n\t    return syntaxError((\"JSON5: invalid end of input at \" + line + \":\" + column))\n\t}\n\n\t// This code is unreachable.\n\t// function invalidToken () {\n\t//     if (token.type === 'eof') {\n\t//         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n\t//     }\n\n\t//     const c = String.fromCodePoint(token.value.codePointAt(0))\n\t//     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n\t// }\n\n\tfunction invalidIdentifier () {\n\t    column -= 5;\n\t    return syntaxError((\"JSON5: invalid identifier character at \" + line + \":\" + column))\n\t}\n\n\tfunction separatorChar (c) {\n\t    console.warn((\"JSON5: '\" + (formatChar(c)) + \"' in strings is not valid ECMAScript; consider escaping\"));\n\t}\n\n\tfunction formatChar (c) {\n\t    var replacements = {\n\t        \"'\": \"\\\\'\",\n\t        '\"': '\\\\\"',\n\t        '\\\\': '\\\\\\\\',\n\t        '\\b': '\\\\b',\n\t        '\\f': '\\\\f',\n\t        '\\n': '\\\\n',\n\t        '\\r': '\\\\r',\n\t        '\\t': '\\\\t',\n\t        '\\v': '\\\\v',\n\t        '\\0': '\\\\0',\n\t        '\\u2028': '\\\\u2028',\n\t        '\\u2029': '\\\\u2029',\n\t    };\n\n\t    if (replacements[c]) {\n\t        return replacements[c]\n\t    }\n\n\t    if (c < ' ') {\n\t        var hexString = c.charCodeAt(0).toString(16);\n\t        return '\\\\x' + ('00' + hexString).substring(hexString.length)\n\t    }\n\n\t    return c\n\t}\n\n\tfunction syntaxError (message) {\n\t    var err = new SyntaxError(message);\n\t    err.lineNumber = line;\n\t    err.columnNumber = column;\n\t    return err\n\t}\n\n\tvar stringify = function stringify (value, replacer, space) {\n\t    var stack = [];\n\t    var indent = '';\n\t    var propertyList;\n\t    var replacerFunc;\n\t    var gap = '';\n\t    var quote;\n\n\t    if (\n\t        replacer != null &&\n\t        typeof replacer === 'object' &&\n\t        !Array.isArray(replacer)\n\t    ) {\n\t        space = replacer.space;\n\t        quote = replacer.quote;\n\t        replacer = replacer.replacer;\n\t    }\n\n\t    if (typeof replacer === 'function') {\n\t        replacerFunc = replacer;\n\t    } else if (Array.isArray(replacer)) {\n\t        propertyList = [];\n\t        for (var i = 0, list = replacer; i < list.length; i += 1) {\n\t            var v = list[i];\n\n\t            var item = (void 0);\n\n\t            if (typeof v === 'string') {\n\t                item = v;\n\t            } else if (\n\t                typeof v === 'number' ||\n\t                v instanceof String ||\n\t                v instanceof Number\n\t            ) {\n\t                item = String(v);\n\t            }\n\n\t            if (item !== undefined && propertyList.indexOf(item) < 0) {\n\t                propertyList.push(item);\n\t            }\n\t        }\n\t    }\n\n\t    if (space instanceof Number) {\n\t        space = Number(space);\n\t    } else if (space instanceof String) {\n\t        space = String(space);\n\t    }\n\n\t    if (typeof space === 'number') {\n\t        if (space > 0) {\n\t            space = Math.min(10, Math.floor(space));\n\t            gap = '          '.substr(0, space);\n\t        }\n\t    } else if (typeof space === 'string') {\n\t        gap = space.substr(0, 10);\n\t    }\n\n\t    return serializeProperty('', {'': value})\n\n\t    function serializeProperty (key, holder) {\n\t        var value = holder[key];\n\t        if (value != null) {\n\t            if (typeof value.toJSON5 === 'function') {\n\t                value = value.toJSON5(key);\n\t            } else if (typeof value.toJSON === 'function') {\n\t                value = value.toJSON(key);\n\t            }\n\t        }\n\n\t        if (replacerFunc) {\n\t            value = replacerFunc.call(holder, key, value);\n\t        }\n\n\t        if (value instanceof Number) {\n\t            value = Number(value);\n\t        } else if (value instanceof String) {\n\t            value = String(value);\n\t        } else if (value instanceof Boolean) {\n\t            value = value.valueOf();\n\t        }\n\n\t        switch (value) {\n\t        case null: return 'null'\n\t        case true: return 'true'\n\t        case false: return 'false'\n\t        }\n\n\t        if (typeof value === 'string') {\n\t            return quoteString(value, false)\n\t        }\n\n\t        if (typeof value === 'number') {\n\t            return String(value)\n\t        }\n\n\t        if (typeof value === 'object') {\n\t            return Array.isArray(value) ? serializeArray(value) : serializeObject(value)\n\t        }\n\n\t        return undefined\n\t    }\n\n\t    function quoteString (value) {\n\t        var quotes = {\n\t            \"'\": 0.1,\n\t            '\"': 0.2,\n\t        };\n\n\t        var replacements = {\n\t            \"'\": \"\\\\'\",\n\t            '\"': '\\\\\"',\n\t            '\\\\': '\\\\\\\\',\n\t            '\\b': '\\\\b',\n\t            '\\f': '\\\\f',\n\t            '\\n': '\\\\n',\n\t            '\\r': '\\\\r',\n\t            '\\t': '\\\\t',\n\t            '\\v': '\\\\v',\n\t            '\\0': '\\\\0',\n\t            '\\u2028': '\\\\u2028',\n\t            '\\u2029': '\\\\u2029',\n\t        };\n\n\t        var product = '';\n\n\t        for (var i = 0, list = value; i < list.length; i += 1) {\n\t            var c = list[i];\n\n\t            switch (c) {\n\t            case \"'\":\n\t            case '\"':\n\t                quotes[c]++;\n\t                product += c;\n\t                continue\n\t            }\n\n\t            if (replacements[c]) {\n\t                product += replacements[c];\n\t                continue\n\t            }\n\n\t            if (c < ' ') {\n\t                var hexString = c.charCodeAt(0).toString(16);\n\t                product += '\\\\x' + ('00' + hexString).substring(hexString.length);\n\t                continue\n\t            }\n\n\t            product += c;\n\t        }\n\n\t        var quoteChar = quote || Object.keys(quotes).reduce(function (a, b) { return (quotes[a] < quotes[b]) ? a : b; });\n\n\t        product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar]);\n\n\t        return quoteChar + product + quoteChar\n\t    }\n\n\t    function serializeObject (value) {\n\t        if (stack.indexOf(value) >= 0) {\n\t            throw TypeError('Converting circular structure to JSON5')\n\t        }\n\n\t        stack.push(value);\n\n\t        var stepback = indent;\n\t        indent = indent + gap;\n\n\t        var keys = propertyList || Object.keys(value);\n\t        var partial = [];\n\t        for (var i = 0, list = keys; i < list.length; i += 1) {\n\t            var key = list[i];\n\n\t            var propertyString = serializeProperty(key, value);\n\t            if (propertyString !== undefined) {\n\t                var member = serializeKey(key) + ':';\n\t                if (gap !== '') {\n\t                    member += ' ';\n\t                }\n\t                member += propertyString;\n\t                partial.push(member);\n\t            }\n\t        }\n\n\t        var final;\n\t        if (partial.length === 0) {\n\t            final = '{}';\n\t        } else {\n\t            var properties;\n\t            if (gap === '') {\n\t                properties = partial.join(',');\n\t                final = '{' + properties + '}';\n\t            } else {\n\t                var separator = ',\\n' + indent;\n\t                properties = partial.join(separator);\n\t                final = '{\\n' + indent + properties + ',\\n' + stepback + '}';\n\t            }\n\t        }\n\n\t        stack.pop();\n\t        indent = stepback;\n\t        return final\n\t    }\n\n\t    function serializeKey (key) {\n\t        if (key.length === 0) {\n\t            return quoteString(key, true)\n\t        }\n\n\t        var firstChar = String.fromCodePoint(key.codePointAt(0));\n\t        if (!util.isIdStartChar(firstChar)) {\n\t            return quoteString(key, true)\n\t        }\n\n\t        for (var i = firstChar.length; i < key.length; i++) {\n\t            if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {\n\t                return quoteString(key, true)\n\t            }\n\t        }\n\n\t        return key\n\t    }\n\n\t    function serializeArray (value) {\n\t        if (stack.indexOf(value) >= 0) {\n\t            throw TypeError('Converting circular structure to JSON5')\n\t        }\n\n\t        stack.push(value);\n\n\t        var stepback = indent;\n\t        indent = indent + gap;\n\n\t        var partial = [];\n\t        for (var i = 0; i < value.length; i++) {\n\t            var propertyString = serializeProperty(String(i), value);\n\t            partial.push((propertyString !== undefined) ? propertyString : 'null');\n\t        }\n\n\t        var final;\n\t        if (partial.length === 0) {\n\t            final = '[]';\n\t        } else {\n\t            if (gap === '') {\n\t                var properties = partial.join(',');\n\t                final = '[' + properties + ']';\n\t            } else {\n\t                var separator = ',\\n' + indent;\n\t                var properties$1 = partial.join(separator);\n\t                final = '[\\n' + indent + properties$1 + ',\\n' + stepback + ']';\n\t            }\n\t        }\n\n\t        stack.pop();\n\t        indent = stepback;\n\t        return final\n\t    }\n\t};\n\n\tvar JSON5 = {\n\t    parse: parse,\n\t    stringify: stringify,\n\t};\n\n\tvar lib = JSON5;\n\n\tvar es5 = lib;\n\n\treturn es5;\n\n})));\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeFunction from \"./isNativeFunction\";\nimport construct from \"./construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import { extend, override } from 'flarum/extend';\nimport DiscussionList from 'flarum/components/DiscussionList';\n\nimport FlarumComponentElement from './FlarumComponentElement';\n\nwindow.customElements.define('flarum-component', FlarumComponentElement);\n\napp.initializers.add('reflar/inject-js-components', () => {\n    override(DiscussionList.prototype, 'loadResults', function(org) {\n        const preloadedDiscussions = app.preloadedApiDocument();\n\n        if (!preloadedDiscussions || !preloadedDiscussions.data || !preloadedDiscussions.data.type !== 'discussions') app.data.apiDocument = null;\n\n        return org();\n    });\n\n    extend(DiscussionList.prototype, 'requestParams', function(params) {\n        Object.assign(params, this.props.params);\n    });\n\n    override(DiscussionList.prototype, 'parseResults', function(org, results) {\n        const limit = this.props.params && this.props.params.page && this.props.params.page.limit;\n        let parsed = results;\n\n        if (limit) {\n            parsed = results.slice(0, limit);\n            parsed['payload'] = results['payload'];\n        }\n\n        return org(parsed);\n    });\n});\n"],"sourceRoot":""}